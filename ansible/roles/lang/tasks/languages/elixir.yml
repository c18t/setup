---

- name: assert elixir_versions
  assert:
    that: elixir_versions is not defined or elixir_versions is iterable
    quiet: true

- name: check exenv
  shell: anyenv envs | grep -qe \^exenv\$
  args:
    executable: '{{ fish_path }}'
  register: check_exenv
  failed_when: check_exenv.rc not in [0, 1]
  changed_when: false
  check_mode: no

- name: install exenv
  shell: anyenv install --skip-existing exenv
  args:
    executable: '{{ fish_path }}'
  when: check_exenv.rc != 0

- block:
  - name: get installed elixir version list
    shell: fish -l -c "exenv versions"
    args:
      executable: '{{ fish_path }}'
    register: installed_elixir_version
    failed_when: installed_elixir_version.rc not in [0, 1]
    changed_when: false
    check_mode: no
  - name: install elixir version
    shell: fish -l -c "exenv install {{ item }}"
    args:
      executable: '{{ fish_path }}'
    when: installed_elixir_version.stdout is not regex("\\b"+item+"\\b")
    with_items: '{{ elixir_versions }}'
  - name: 'check global elixir version {{ elixir_versions[0] }}'
    shell: fish -l -c "exenv global | grep -qe \^{{ elixir_versions[0] }}\\\$"
    args:
      executable: '{{ fish_path }}'
    register: check_exenv_version
    failed_when: check_exenv_version.rc not in [0, 1]
    changed_when: false
    check_mode: no
  - name: 'set global elixir version {{ elixir_versions[0] }}'
    shell: fish -l -c "exenv global {{ elixir_versions[0] }}"
    args:
      executable: '{{ fish_path }}'
    when: check_exenv_version.rc != 0
  when: elixir_versions is defined and elixir_versions | length > 0
