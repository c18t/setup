---
- name: assert perl_versions
  assert:
    that: perl_versions is not defined or perl_versions is iterable
    quiet: true

- name: check plenv
  shell: fish -l -c "anyenv envs | grep -qe \^plenv\\\$"
  register: check_plenv
  failed_when: check_plenv.rc not in [0, 1]
  changed_when: false
  check_mode: false

- name: install plenv
  shell: fish -l -c "anyenv install --skip-existing plenv"
  when: check_plenv.rc != 0
  notify: update_global_path

- name: install perl version
  block:
    - name: get installed perl version list
      shell: fish -l -c "plenv versions"
      register: installed_perl_version
      failed_when: installed_perl_version.rc not in [0, 1]
      changed_when: false
      check_mode: false

    - name: check cmd.exe (for WSL)
      shell: type cmd.exe
      register: type_cmd
      failed_when: type_cmd.rc not in [0, 1]
      changed_when: false
      check_mode: false

    - name: install perl version (for WSL)
      block:
        - name: get plenv root (for WSL)
          shell: fish -l -c "plenv root"
          register: get_plenv_root
          changed_when: false
          check_mode: false

        - name: get brew --prefix (for WSL)
          shell: brew --prefix
          register: get_brew_prefix
          changed_when: false
          check_mode: false

        - name: install perl version (for WSL)
          become: true
          shell: '{{ get_plenv_root.stdout }}/bin/plenv install {{ item }} {{ perl_option }}'
          environment:
            PLENV_ROOT: '{{ get_plenv_root.stdout }}'
            PATH: '{{ get_plenv_root.stdout }}/bin:{{ get_brew_prefix.stdout }}/bin:{{ ansible_env.PATH | default("") }}'
            LIBRARY_PATH: '{{ get_brew_prefix.stdout }}/lib:{{ ansible_env.LIBRARY_PATH | default("") }}'
            LD_LIBRARY_PATH: '{{ get_brew_prefix.stdout }}/lib:{{ ansible_env.LD_LIBRARY_PATH | default("") }}'
            C_INCLUDE_PATH: '{{ get_brew_prefix.stdout }}/include:{{ ansible_env.C_INCLUDE_PATH | default("") }}'
            CPLUS_INCLUDE_PATH: '{{ get_brew_prefix.stdout }}/include:{{ ansible_env.CPLUS_INCLUDE_PATH | default("") }}'
            OBJC_INCLUDE_PATH: '{{ get_brew_prefix.stdout }}/include:{{ ansible_env.OBJC_INCLUDE_PATH | default("") }}'
          when: installed_perl_version.stdout is not regex("\\b"+item+"\\b")
          with_items: '{{ perl_versions }}'
      when: type_cmd.rc == 0

    - name: install perl version (for other)
      shell: fish -l -c "plenv install {{ item }} {{ perl_option }}"
      when: type_cmd.rc != 0 and installed_perl_version.stdout is not regex("\\b"+item+"\\b")
      with_items: '{{ perl_versions }}'

    - name: 'check global perl version {{ perl_versions[0] }}'
      shell: fish -l -c "plenv global | grep -qe \^{{ perl_versions[0] }}\\\$"
      register: check_plenv_version
      failed_when: check_plenv_version.rc not in [0, 1]
      changed_when: false
      check_mode: false

    - name: 'set global perl version {{ perl_versions[0] }}'
      shell: fish -l -c "plenv global {{ perl_versions[0] }}"
      when: check_plenv_version.rc != 0
  when: perl_versions is defined and perl_versions | length > 0
