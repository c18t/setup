---

- name: assert python_versions
  assert:
    that: python_versions is not defined or python_versions is iterable
    quiet: true

- name: check pyenv
  shell: anyenv envs | grep -qe \^pyenv\$
  args:
    executable: '{{ fish_path }}'
  register: check_pyenv
  failed_when: check_pyenv.rc not in [0, 1]
  changed_when: false
  check_mode: no

- name: install pyenv
  shell: anyenv install --skip-existing pyenv
  args:
    executable: '{{ fish_path }}'
  when: check_pyenv.rc != 0

- block:
  - name: get installed python version list
    shell: fish -l -c "pyenv versions"
    args:
      executable: '{{ fish_path }}'
    register: installed_python_version
    failed_when: installed_python_version.rc not in [0, 1]
    changed_when: false
    check_mode: no
  - name: install python version
    shell: fish -l -c "pyenv install {{ item }}"
    args:
      executable: '{{ fish_path }}'
    when: installed_python_version.stdout is not regex("\\b"+item+"\\b")
    with_items: '{{ python_versions }}'
  - name: 'check global python version {{ python_versions[0] }}'
    shell: fish -l -c "pyenv global | grep -qe \^{{ python_versions[0] }}\\\$"
    args:
      executable: '{{ fish_path }}'
    register: check_pyenv_version
    failed_when: check_pyenv_version.rc not in [0, 1]
    changed_when: false
    check_mode: no
  - name: 'set global python version {{ python_versions[0] }}'
    shell: fish -l -c "pyenv global {{ python_versions[0] }}"
    args:
      executable: '{{ fish_path }}'
    when: check_pyenv_version.rc != 0
  when: python_versions is defined and python_versions | length > 0
