---
- name: Windows
  hosts: local
  pre_tasks:
    - include_vars: common.yml
  roles:
    - role: os-setting-windows
      tags: os-setting-windows
    - role: chocolatey
      tags: chocolatey
    - role: scoop
      tags: scoop
    - role: vscode
      tags: vscode
    - role: software-windows
      tags: software-windows
    - role: command-line
      tags: command-line
  vars:
    # 指定できる変数は各ロールの defaults/main.yml 参照
    # ansible
    ansible_user: '{{ win_username }}'
    ansible_password: '{{ win_password }}'
    ansible_become_method: runas
    ansible_become_user: '{{ win_username }}'
    ansible_become_password: '{{ win_password }}'
    ansible_connection: winrm
    ansible_winrm_transport: basic
    ansible_winrm_server_cert_validation: ignore
    ansible_python_interpreter: /home/linuxbrew/.linuxbrew/bin/python3
    # common
    my_home: D:\Users\{{ user }}
    my_user: '{{ win_username }}'
    my_editor: code
    my_visual: code
    my_temporary_home: D:\Temp\{{ user }}
    my_xdg_cache_home: D:\Users\{{ user }}\AppData\Roaming
    my_xdg_config_home: D:\Users\{{ user }}\AppData\Local
    my_xdg_data_home: D:\Users\{{ user }}\AppData\Local
    # chocolatey
    chocolatey_config: chocolatey-khronos.yml
    # scoop
    scoop_config: scoop-khronos.yml
    # vscode
    vscode_extensions: extensions.yml
    vscode_confing: settings-win.json
  vars_prompt:
    - name: win_username
      prompt: 'Windows username'
      private: false
    - name: win_password
      prompt: 'Windows password'
      private: true

- name: WSL
  hosts: local
  pre_tasks:
    - include_vars: common.yml
    - include: pre_tasks/set_resources.yml
  handlers:
    - include: handlers/handlers_wsl.yml
  roles:
    - role: home
      tags: home
    - role: apt
      tags: apt
    - role: homebrew
      tags: homebrew
    - role: nvim
      tags: nvim
    - role: fish-shell
      tags: fish-shell
    - role: anyenv
      tags: anyenv
    - role: lang
      tags: lang
    - role: command-line
      tags: command-line
  vars:
    # 指定できる変数は各ロールの defaults/main.yml 参照
    # ansible
    ansible_python_interpreter: /home/linuxbrew/.linuxbrew/bin/python3
    # common
    my_editor: code
    my_visual: code
    my_temporary_home: '{{ "/mnt/d/Temp/" + (home | basename) }}'
    my_xdg_config_home: '{{ home + "/AppData/Local" }}'
    my_xdg_cache_home: '{{ home + "/AppData/Roaming" }}'
    my_xdg_data_home: '{{ home + "/AppData/Local" }}'
    # home
    ssh_config: config-prv
    git_config: .gitconfig-prv
    # apt
    apt_config: apt-khronos.yml
    # homebrew
    homebrew_config: brewfile-khronos.yml
    # fish-shell
    fish_shell_config: config-wsl.fish
    # lang
    # wxはwxWidgetsを--enable-compat28オプションを付けてソースからビルドしないといけないので除外
    # cf. https://erlang.org/doc/installation_guide/INSTALL.html#Advanced-configuration-and-build-of-ErlangOTP_Building_Building-with-wxErlang
    erlang_option: >-
      --enable-dynamic-ssl-lib
      --with-ssl=/home/linuxbrew/.linuxbrew/opt/openssl@1.1
      --with-odbc=/home/linuxbrew/.linuxbrew/opt/unixodbc
      --without-wx
    erlang_make_arguments: -j 4
    # makefileが見つからないエラーが出るので別名を指定
    perl_option: -j 4 -Dfirstmakefile=GNUmakefile
    php_build_config: configure_options-wsl
    php_make_arguments: -j 4
  vars_prompt:
    - name: my_password
      prompt: 'WSL user password'
      private: true
