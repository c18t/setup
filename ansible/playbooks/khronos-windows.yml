---
- name: Windows
  hosts: khronos
  vars_prompt:
    - name: win_username
      prompt: 'Windows username'
      private: false
    - name: win_password
      prompt: 'Windows password'
      private: true
  vars:
    # ansible
    ansible_user: '{{ win_username }}'
    ansible_password: '{{ win_password }}'
    ansible_become_method: runas
    ansible_become_user: '{{ win_username }}'
    ansible_become_password: '{{ win_password }}'
    ansible_connection: ssh
    ansible_shell_type: powershell
    ansible_python_interpreter: /home/linuxbrew/.linuxbrew/bin/python3
    # common
    my_home: D:\Users\{{ user }}
    my_user: '{{ win_username }}'
    my_editor: code
    my_visual: code
    my_temporary_home: D:\Temp\{{ user }}
    my_xdg_cache_home: D:\Users\{{ user }}\AppData\Roaming
    my_xdg_config_home: D:\Users\{{ user }}\AppData\Local
    my_xdg_data_home: D:\Users\{{ user }}\AppData\Local
  pre_tasks:
    - include_vars: common.yml
    - include_vars: cli_tools.yml
  roles:
    - role: os-windows
    - role: chocolatey
      vars:
        chocolatey_packages:
          # - { name: 1password } # なんか失敗する
          - { name: adobereader } # scoop にない
          - { name: chocolatey }
          - { name: chocolateygui }
          - { name: docker-desktop } # scoop にない
          - { name: gitter } # scoop にない
          - { name: GoogleChrome } # インストーラで入れたい
          # - { name: GoogleJapaneseInput } # なんか失敗する
          - { name: iTunes }
          - { name: limechat } # scoop にない
          # - { name: mnemosyne } # scoop にない # なんか失敗する
          - { name: steam } # インストーラで入れたい
          # - { name: unity } # scoop にない # unityhubで入れる
          - { name: VirtualCloneDrive }
          - { name: visualstudio-installer }
    - role: scoop
      vars:
        scoop_buckets:
          - main
          - extras
          - java
        scoop_packages:
          - { name: 7zip, global: true }
          - { name: anaconda3, global: true }
          - { name: android-studio }
          - { name: arduino }
          - { name: audacity }
          - { name: autohotkey }
          - { name: busybox, global: true }
          # - { name: calibre } # なんか止まる
          - { name: direnv, global: true }
          - { name: discord }
          - { name: dotnet-sdk, global: true }
          - { name: firefox }
          - { name: firefox-nightly }
          - { name: fork }
          - { name: gimp } # Windows Defender のリアルタイム保護が有効だと脅威とみなされて失敗する
          - { name: git, global: true }
          - { name: ghostscript, global: true }
          - { name: ghq, global: true }
          - { name: go, global: true }
          - { name: googlechrome-dev }
          - { name: gpg4win, global: true }
          - { name: gradle, global: true }
          - { name: graphviz, global: true }
          - { name: hadolint, global: true }
          - { name: helm, global: true }
          - { name: honeyview }
          - { name: inkscape }
          - { name: jmeter, global: true }
          - { name: linqpad }
          - { name: makemkv }
          - { name: msys2, global: true }
          - { name: neofetch }
          - { name: neovim }
          - { name: nodejs, global: true }
          - { name: obs-studio }
          - { name: openjdk, global: true }
          - { name: openssl, global: true }
          - { name: opera }
          - { name: perl, global: true }
          - { name: plantuml, global: true }
          - { name: qbittorrent }
          - { name: ruby, global: true }
          - { name: screentogif }
          - { name: slack }
          - { name: stack, global: true }
          - { name: sudo }
          - { name: teraterm }
          - { name: vivaldi }
          - { name: vlc }
          - { name: vscode }
          - { name: winmerge, global: true }
          - { name: winscp, global: true }
          - { name: xmind8 }
    - role: vscode
      vars:
        vscode_confing: settings-win.json
        vscode_extensions:
          - bierner.markdown-checkbox
          - bierner.markdown-preview-github-styles
          - bmalehorn.vscode-fish
          - bungcip.better-toml
          - casualjim.theme-desertex
          - chrisdias.vscode-opennewinstance
          - CoenraadS.bracket-pair-colorizer
          - darkriszty.markdown-table-prettify
          - dawhite.mustache
          - dbaeumer.vscode-eslint
          - donjayamanne.githistory
          - eamodio.gitlens
          - EFanZh.graphviz-preview
          - electrotype.windows-explorer-context-menu
          - EliverLara.andromeda
          - esbenp.prettier-vscode
          - fallenwood.vimL
          - felixfbecker.php-debug
          - gamunu.vscode-yarn
          - geeklearningio.graphviz-markdown-preview
          - IBM.output-colorizer
          - idleberg.badges
          - jebbs.plantuml
          - jinsihou.diff-tool
          - justusadam.language-haskell
          - kenhowardpdx.vscode-gist
          - kisstkondoros.vscode-codemetrics
          - kosz78.nim
          - kukushi.pasteurl
          - lextudio.restructuredtext
          - mattn.OpenVim
          - me-dutour-mathieu.vscode-github-actions
          - mechatroner.rainbow-csv
          - mitchdenny.ecdc
          - mjmcloug.vscode-elixir
          - mosapride.zenkaku
          - mrmlnc.vscode-apache
          - ms-azuretools.vscode-docker
          - MS-CEINTL.vscode-language-pack-ja
          - ms-python.python
          - ms-vscode-remote.remote-wsl
          - ms-vscode.cpptools
          - ms-vscode.csharp
          - ms-vscode.Go
          - ms-vscode.powershell
          - msjsdiag.cordova-tools
          - msjsdiag.debugger-for-chrome
          - octref.vetur
          - oderwat.indent-rainbow
          - PKief.markdown-checkbox
          - redhat.vscode-yaml
          - shuworks.vscode-table-formatter
          - Stephanvs.dot
          - sysoev.language-stylus
          - thisismanta.stylus-supremacy
          - tomoki1207.pdf
          - Tyriar.sort-lines
          - vscode-icons-team.vscode-icons
          - vscodevim.vim
          - vscoss.vscode-ansible
          - wayou.vscode-todo-highlight
    - role: software-windows
    - role: cli

- name: WSL
  hosts: local
  vars_prompt:
    - name: my_password
      prompt: 'WSL user password'
      private: true
  vars:
    # ansible
    ansible_python_interpreter: /home/linuxbrew/.linuxbrew/bin/python3
    # common
    my_editor: code
    my_visual: code
    my_temporary_home: '{{ "/mnt/d/Temp/" + (home | basename) }}'
    my_xdg_config_home: '{{ home + "/AppData/Local" }}'
    my_xdg_cache_home: '{{ home + "/AppData/Roaming" }}'
    my_xdg_data_home: '{{ home + "/AppData/Local" }}'
  pre_tasks:
    - include_vars: common.yml
    - include_vars: cli_tools.yml
    - include: pre_tasks/set_resources.yml
  handlers:
    - include: handlers/handlers_wsl.yml
  roles:
    - role: home
      vars:
        home_sh_config: config-prv
        home_git_config: .gitconfig-prv
    - role: apt
      vars:
        apt_keys: []
        apt_repositories: []
        apt_packages: []
    - role: homebrew
      vars:
        brew_taps:
          - homebrew/core
        brew_fomulae:
          - ansible
          - anyenv
          - autoconf # for phpenv
          - bats
          - byobu
          - bzip2 # for phpenv
          - curl-openssl # for phpenv
          - direnv
          - fish
          - fop # for erlenv
          - fzf
          - ghq
          - git-secret
          - git-secrets
          - gradle
          # - haskell-stack # 落ちるので apt で入れる
          - hub
          - icu4c # for phpenv
          - krb5 # for phpenv
          - libedit # for phpenv
          - libxml2 # for phpenv
          - libzip # for phpenv
          - ncurses # for erlenv
          - neofetch
          - neovim
          - nim
          - npm # for command-line
          - oniguruma # for phpenv
          - openldap # for phpenv
          - openssl@1.1 # for erlenv
          - peco
          - pkg-config # for ansible, phpenv
          - python # for command-line
          - readline # for luaenv
          - ruby # for command-line
          - sqlite # for ansible, phpenv
          # - swagger-codegen
          - tidy-html5 # for phpenv
          - the_platinum_searcher
          - tree
          - unixodbc # for erlenv
          - zlib # for phpenv
    - role: nvim
    - role: fish-shell
      vars:
        fish_shell_config: config-wsl.fish
    - role: anyenv
    - role: lang
      vars:
        # wxはwxWidgetsを--enable-compat28オプションを付けてソースからビルドしないといけないので除外
        # cf. https://erlang.org/doc/installation_guide/INSTALL.html#Advanced-configuration-and-build-of-ErlangOTP_Building_Building-with-wxErlang
        erlang_option: >-
          --enable-dynamic-ssl-lib
          --with-ssl=/home/linuxbrew/.linuxbrew/opt/openssl@1.1
          --with-odbc=/home/linuxbrew/.linuxbrew/opt/unixodbc
          --without-wx
        erlang_make_arguments: -j 4
        # makefileが見つからないエラーが出るので別名を指定
        perl_option: -j 4 -Dfirstmakefile=GNUmakefile
        php_build_config: configure_options-wsl
        php_make_arguments: -j 4
    - role: cli
